#!/usr/bin/env perl

use strict;
use diagnostics;
use warnings;

use POSIX;
use CPrAN;
use Capture::Tiny ':all';
use Try::Tiny;

warn('No API token', "\n") and exit unless defined $ENV{'CPRAN_PUSHER_TOKEN'};

print strftime("%Y-%m-%dT%T%z", localtime) . ' ';

my $cpran = CPrAN->new({
  token => $ENV{'CPRAN_PUSHER_TOKEN'},
  quiet => 1,
});

my ($pid, $sid);
try {
  $pid = $cpran->api->projects( { search => 'plugin_cpran' } )->[0]->{id};
  my $snippets = $cpran->api->snippets($pid);
  foreach (@{$snippets}) {
    $sid = $_->{id} if $_->{file_name} eq 'cpran.list';
  }
}
catch {
  print "Unable to find package list id\n";
  exit 1;
};

my ($stdout, $stderr) = capture {
  $cpran->run_command( update => {
    quiet => 1,
    print => 1,
    raw => 1,
    virtual => 1,
  });
};

if ($stderr ne '') {
  print "There were errors during update\n";
  print $stderr;
  exit 1;
}

try {
  $cpran->api->edit_snippet(
    $pid, $sid, {
      code => $stdout
    }
  );
}
catch {
  print "Could not upload package list\n";
  exit 1;
};

print "Success\n";
